@{
    ViewData["Title"] = "Resultados";
    Layout = "_Layout"; // Usa el layout compartido
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">
    <link rel="shortcut icon" href="https://cdn-icons-png.flaticon.com/512/5067/5067875.png" />
    <style>
        #map {
            height: 300px;
            width: 100%;
            border-radius: 10px;
            margin-bottom: 50px;
        }

        .table-container {
            margin-top: 20px;
            background-color: #fff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
    </style>
</head>
<body>
    <header class="mb-4 border border-dark">
        <nav class="navbar navbar-expand-lg sticky-top">
            <div class="container">
                <a asp-controller="Home" asp-action="Index">
                    <img style="width: 50px; height: 50px; border-radius: 50%;"
                         src="https://cdn-icons-png.flaticon.com/512/5067/5067875.png" alt="Logo">
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
                        aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav ms-auto me-5">
                        <li class="nav-item p-2">
                            <a class="nav-link" asp-controller="Reportes" asp-action="Reportar">Reportar Robo</a>
                        </li>
                        @* <li class="nav-item p-2"> *@
                        @*     <a class="nav-link" asp-controller="StaticPage" asp-action="Planes">Mejorar a Premium</a> *@
                        @* </li> *@
                        <li class="nav-item p-2">
                            <a class="nav-link" asp-controller="StaticPage" asp-action="MapaNavegacion">Mapa de navegación</a>
                        </li>
                        <li class="nav-item p-2 me-5">
                            <a class="nav-link" asp-controller="PQRS" asp-action="pqrs">PQRS</a>
                        </li>
                    </ul>
                    <button type="button" class="btn btn-light me-5" onclick="cerrarSesion()">
                        <a class="nav-link" asp-controller="Home" asp-action="Index">Cerrar Sesion</a>
                    </button>
                </div>
            </div>
        </nav>
    </header>

    <header class="bg-light py-3">
        <div class="container text-center">
            <h1 class="fw-bold">Resultados</h1>
            <p class="text-muted">Información de robos y zonas</p>
        </div>
    </header>

    <main class="container">
        <section class="table-container">
            <h2 class="h4 mb-3">Tabla de Robos</h2>
            <div id="columnFilters" class="mb-3 d-none">
                <strong>Filtrar columnas:</strong><br>
                <label><input type="checkbox" class="col-filter" data-col="0" checked> Localidad</label>
                <label><input type="checkbox" class="col-filter" data-col="1" checked> Nombre</label>
                <label><input type="checkbox" class="col-filter" data-col="2" checked> Modalidad</label>
                <label><input type="checkbox" class="col-filter" data-col="3" checked> Descripción</label>
                <label><input type="checkbox" class="col-filter" data-col="4" checked> Fecha</label>
            </div>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th scope="col">Localidad</th>
                        <th scope="col">Nombre</th>
                        <th scope="col">Modalidad</th>
                        <th scope="col">Descripción</th>
                        <th scope="col">Fecha</th>
                    </tr>
                </thead>
                <tbody id="resultTableBody">
                    <!-- Las filas se insertarán dinámicamente -->
                </tbody>
            </table>
        </section>

        <div id="downloadContainer" style="text-align: center; display: none;">
            <button id="downloadBtn" class="btn btn-success mt-3">Descargar Datos</button>
        </div>


        <section class="mt-4">
            <h2 class="h4 mb-3">Mapa de Zona</h2>
            <div id="map"></div>
        </section>
        <div style="text-align: center;">
            <a asp-controller="Home" asp-action="Index" class="mb-4 btn btn-outline-dark">Volver</a>
        </div>
    </main>

    <footer class="border border-dark">
        <ul class="list">
            <li>
                <a asp-controller="StaticPage" asp-action="AcercaDeNosotros">Acerca de nosotros</a>
            </li>
            <li>
                <a asp-controller="StaticPage" asp-action="PrivacidadCondiciones">Privacidad y Condiciones</a>
            </li>
            <li>
                <a asp-controller="StaticPage" asp-action="MapaNavegacion">Mapa Navegacion</a>
            </li>
        </ul>
        <p class="copyright">
            © 2024 Aplicativo de Robos. SENA, Centro de Servicios Financieros
        </p>
    </footer>

    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    <script>
        function cerrarSesion() {
            localStorage.clear();
            window.location.href = "@Url.Action("Index", "Home")";
        }

        document.addEventListener("DOMContentLoaded", () => {
            // Verificar si existe la variable 'localidad' en localStorage
            const localidad = localStorage.getItem('localidad');
            if (!localidad) {
                alert('Algo salió mal, intenta nuevamente');
                window.location.href = "@Url.Action("Index", "Home")";
                return;
            }

            // Realizar la petición al endpoint del ResultadoController
            // Se asume que el endpoint es "/Resultado/GetResultados" y acepta el parámetro "localidad"
            fetch(`/Resultado/GetResultados?localidad=${encodeURIComponent(localidad)}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Error al obtener los datos');
                    }
                    return response.json();
                })
                .then(data => {
                    const tableBody = document.getElementById('resultTableBody');
                    tableBody.innerHTML = ""; // Limpiar filas previas
                    if (data.length === 0) {
                        tableBody.innerHTML = '<tr><td colspan="5" class="text-center">No se encontraron resultados</td></tr>';
                    } else {
                        data.forEach(item => {
                            const row = document.createElement('tr');
                            row.innerHTML = `
                                <td>${item.nombreLocalidad}</td>
                                <td>${item.nombre}</td>
                                <td>${item.metodologiaRobo}</td>
                                <td>${item.descripcion}</td>
                                <td>${new Date(item.fechaRobo).toLocaleDateString()}</td>
                            `;
                            tableBody.appendChild(row);
                        });
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error al obtener los resultados');
                });
        });

        const localidades = {
            "Usaquén": [4.710988, -74.030784],
            "Chapinero": [4.645365, -74.057036],
            "Santa Fe": [4.601553, -74.065365],
            "San Cristóbal": [4.561343, -74.078488],
            "Usme": [4.486676, -74.120183],
            "Tunjuelito": [4.584156, -74.142774],
            "Bosa": [4.625001, -74.185698],
            "Kennedy": [4.626073, -74.147573],
            "Fontibón": [4.678395, -74.141575],
            "Engativá": [4.703327, -74.103163],
            "Suba": [4.754354, -74.078500],
            "Barrios Unidos": [4.673735, -74.076570],
            "Teusaquillo": [4.639211, -74.083620],
            "Los Mártires": [4.603008, -74.085678],
            "Antonio Nariño": [4.589887, -74.096992],
            "Puente Aranda": [4.609710, -74.105491],
            "La Candelaria": [4.595423, -74.072387],
            "Rafael Uribe Uribe": [4.561980, -74.103695],
            "Ciudad Bolívar": [4.544953, -74.154481],
            "Sumapaz": [4.291107, -74.275394]
        };

        // Obtener localidad desde localStorage
        let localidadSeleccionada = localStorage.getItem("localidad");

        // Verificar si la localidad existe en el listado, si no, usar Chapinero como default
        let coordenadas = localidades[localidadSeleccionada] || localidades["Chapinero"];

        // Inicializar el mapa
        var map = L.map('map').setView(coordenadas, 14);

        // Agregar capa de OpenStreetMap
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '© OpenStreetMap'
        }).addTo(map);

        // Agregar marcador en la localidad seleccionada
        L.marker(coordenadas)
            .addTo(map)
            .bindPopup(`<b>${localidadSeleccionada || "Chapinero"}</b><br>Zona seleccionada.`)
            .openPopup();

            document.addEventListener("DOMContentLoaded", () => {
            // Verificar el plan del usuario
            const planUsuario = localStorage.getItem('plan');
            if (planUsuario === 'Premium') {
                document.getElementById("downloadContainer").style.display = "block";
            }

            const localidad = localStorage.getItem('localidad');
            if (!localidad) {
                alert('Algo salió mal, intenta nuevamente');
                window.location.href = "@Url.Action("Index", "Home")";
                return;
            }

            fetch(`/Resultado/GetResultados?localidad=${encodeURIComponent(localidad)}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Error al obtener los datos');
                    }
                    return response.json();
                })
                .then(data => {
                    const tableBody = document.getElementById('resultTableBody');
                    tableBody.innerHTML = "";
                    if (data.length === 0) {
                        tableBody.innerHTML = '<tr><td colspan="5" class="text-center">No se encontraron resultados</td></tr>';
                    } else {
                        data.forEach(item => {
                            const row = document.createElement('tr');
                            row.innerHTML = `
                                <td>${item.nombreLocalidad}</td>
                                <td>${item.nombre}</td>
                                <td>${item.metodologiaRobo}</td>
                                <td>${item.descripcion}</td>
                                <td>${new Date(item.fechaRobo).toLocaleDateString()}</td>
                            `;
                            tableBody.appendChild(row);
                        });

                        // Guardar datos en una variable para la descarga
                        window.resultadosData = data;
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error al obtener los resultados');
                });
        });

        // Función para generar y descargar el archivo
        document.getElementById("downloadBtn").addEventListener("click", () => {
            if (!window.resultadosData || window.resultadosData.length === 0) {
                alert("No hay datos para descargar.");
                return;
            }

            let csvContent = "Localidad,Nombre,Modalidad,Descripción,Fecha\n";
            window.resultadosData.forEach(item => {
                csvContent += `${item.nombreLocalidad},${item.nombre},${item.metodologiaRobo},${item.descripcion},${new Date(item.fechaRobo).toLocaleDateString()}\n`;
            });

            const blob = new Blob([csvContent], { type: "text/csv" });
            const a = document.createElement("a");
            a.href = URL.createObjectURL(blob);
            a.download = "Resultados.csv";
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
        });

                document.addEventListener("DOMContentLoaded", () => {
            const plan = localStorage.getItem("plan"); // Obtener el plan del usuario

            if (plan === "Premium") {
                document.getElementById("columnFilters").classList.remove("d-none"); // Mostrar filtros
            }

            // Evento para ocultar/mostrar columnas
            document.querySelectorAll(".col-filter").forEach(checkbox => {
                checkbox.addEventListener("change", function () {
                    const colIndex = this.getAttribute("data-col");
                    const table = document.querySelector(".table");
                    table.querySelectorAll("tr").forEach(row => {
                        const cell = row.children[colIndex];
                        if (cell) {
                            cell.style.display = this.checked ? "" : "none";
                        }
                    });
                });
            });
        });
    </script>
</body>
</html>
