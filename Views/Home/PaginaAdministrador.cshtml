@{
    ViewData["Title"] = "Aplicativo vista y reporte de robos";
    var identificador = ViewData["Identificador"] as string ?? "";
    var nombre = ViewData["Nombre"] as string ?? "Usuario";
    var apellido = ViewData["Apellido"] as string ?? "";
    var plan = ViewData["Plan"] as string ?? "Básico";
    var correo = ViewData["Correo"] as string ?? "";
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="~/css/paginaPrincipal.css">
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <style>
        #map {
            height: 500px;
            width: 45vw;
            border: solid 2px;
        }

        .input-container {
            margin-top: 10px;
            text-align: center;
        }
    </style>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">
    <link rel="shortcut icon" href="https://cdn-icons-png.flaticon.com/512/5067/5067875.png" />
</head>
<body>
    <header class="mb-4 border border-dark">
        <nav class="navbar navbar-expand-lg sticky-top">
            <div class="container">
                <a asp-controller="Home" asp-action="Index">
                    <img style="width: 50px; height: 50px; border-radius: 50%;" src="https://cdn-icons-png.flaticon.com/512/5067/5067875.png" alt="Logo">
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
                        aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav ms-auto me-5">
                        <li class="nav-item p-2">
                            <a class="nav-link" asp-controller="Reportes" asp-action="Reportar">Reportar Robo</a>
                        </li>
                        <li class="nav-item p-2">
                            <a class="nav-link" asp-controller="StaticPage" asp-action="Planes">Mejorar a Premium</a>
                        </li>
                        <li class="nav-item p-2 me-5">
                            <a class="nav-link" asp-controller="PQRS" asp-action="pqrs">PQRS</a>
                        </li>
                    </ul>
                    <button type="button" class="btn btn-light me-5">
                        <a class="nav-link" asp-controller="Administrar" asp-action="Administrar">Administrar</a>
                    </button>
                    <button type="button" class="btn btn-light me-5" onclick="cerrarSesion()">
                        <a class="nav-link" asp-controller="Home" asp-action="Index">Cerrar Sesion</a>
                    </button>
                </div>
            </div>
        </nav>
    </header>

    <main class="container">
        <h1 class="text-center mt-5">APLICATIVO VISTA ESTADÍSTICA Y REPORTE DE ROBOS</h1>
        <h2 id="nombre-usuario" class="text-center">Bienvenido Administrador</h2>

        <section class="d-flex justify-content-around align-items-center my-4">
            <div class="search-map text-center">
                <p>Busca la localidad de la cual quieres saber más información</p>
                <div id="map"></div>
                <div class="input-container">
                    <input style="width: 45vw;" id="location-input" type="text" placeholder="Ubicación seleccionada" readonly>
                </div>
            </div>
            <div class="d-flex flex-column align-items-center">
                <a href="~/Home/Reportar" class="btn btn-dark btn-lg">Reportar Robo</a>
            </div>
        </section>

        <section class="input-section text-center mt-5">
            <input id="search-input" class="form-control mb-3 w-75 mx-auto" type="text" placeholder="Seleccione una ubicación en el mapa" readonly>
            <!-- Se agrega el id "buscarBtn" para asignarle el evento correcto -->
            <a href="~/Home/Resultados" id="buscarBtn" class="btn btn-dark">Buscar</a>
        </section>
        <div id="mensaje-error" class="text-danger mb-3" style="display: none;">
            Por favor seleccione una localidad en el mapa.
        </div>
    </main>

    <footer style="margin-top: 6rem;" class="border border-dark">
        <ul class="list">
            <li>
                <a asp-controller="StaticPage" asp-action="AcercaDeNosotros">Acerca de nosotros</a>
            </li>
            <li>
                <a asp-controller="StaticPage" asp-action="PrivacidadCondiciones">Privacidad y Condiciones</a>
            </li>
            <li>
                <a asp-controller="StaticPage" asp-action="MapaNavegacion">Mapa Navegacion</a>
            </li>
        </ul>
        <p class="copyright">
            © 2024 Aplicativo de Robos. SENA, Centro de Servicios Financieros
        </p>
    </footer>

    <script>
        // Función para obtener parámetros de la URL
        function getUrlParams() {
            const params = {};
            window.location.search.replace(/[?&]+([^=&]+)=([^&]*)/gi, (m, key, value) => {
                params[key] = value;
            });
            return params;
        }

        // Guarda los parámetros de la URL en localStorage
        function saveParamsToLocalStorage() {
            const params = getUrlParams();
            for (const key in params) {
                localStorage.setItem(key, params[key]);
            }
        }

        // Limpia localStorage y redirige a Home/Index
        function cerrarSesion() {
            localStorage.clear();
            window.location.href = "@Url.Action("Index", "Home")";
        }

        // Normaliza una cadena eliminando caracteres especiales y la primera palabra
        function normalizeLocalidad(text) {
            const withoutFirstWord = text.includes(' ') ? text.split(' ').slice(1).join(' ') : text;
            return withoutFirstWord.normalize("NFD").replace(/[\u0300-\u036f]/g, "");
        }

        // Al cargar la página, guarda los parámetros en localStorage y asigna el evento al botón Buscar
        document.addEventListener("DOMContentLoaded", () => {
            localStorage.removeItem('localidad');

            saveParamsToLocalStorage();

            const buscarBtn = document.getElementById('buscarBtn');
            if (buscarBtn) {
                buscarBtn.addEventListener('click', function(e) {
                    e.preventDefault();
                    const mensajeError = document.getElementById('mensaje-error');
                    const localidad = localStorage.getItem('localidad');

                    if (!localidad) {
                        mensajeError.style.display = 'block'; // Muestra el mensaje
                    } else {
                        window.location.href = '/Resultado/Resultados';
                    }
                });
            }
        });

        // Inicialización del mapa
        const map = L.map('map').setView([4.60971, -74.08175], 12);
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', { maxZoom: 18 }).addTo(map);
        L.marker([4.645365, -74.057036]).addTo(map)
            .bindPopup('Chapinero, Bogotá')
            .openPopup();

        map.on('click', function(e) {
            const { lat, lng } = e.latlng;
            const url = `https://nominatim.openstreetmap.org/reverse?lat=${lat}&lon=${lng}&format=json`;
            fetch(url)
                .then(response => response.json())
                .then(data => {
                    const address = data.address;
                    const barrio = address.neighbourhood || 'Barrio desconocido';
                    const localidad = address.suburb || 'Localidad desconocida';

                    // Muestra la dirección en los inputs
                    document.getElementById('location-input').value = `${barrio}, ${localidad}`;
                    document.getElementById('search-input').value = removeFirstWord(localidad);

                    // Guarda la localidad normalizada en localStorage
                    const normalizedLocalidad = normalizeLocalidad(localidad);
                    localStorage.setItem('localidad', normalizedLocalidad);
                })
                .catch(error => console.error('Error al obtener la ubicación:', error));
        });

        function removeFirstWord(text) {
            return text.includes(' ') ? text.split(' ').slice(1).join(' ') : text;
        }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
